Subject: [PATCH] chore: created a base structure add database adapter too
---
Index: .gitignore
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.gitignore b/.gitignore
new file mode 100644
--- /dev/null	(revision 6a1928f488ad5374400f30d7447521d3fd4d24cc)
+++ b/.gitignore	(revision 6a1928f488ad5374400f30d7447521d3fd4d24cc)
@@ -0,0 +1,59 @@
+logs
+*.log
+npm-debug.log*
+yarn-debug.log*
+yarn-error.log*
+lerna-debug.log*
+.pnpm-debug.log*
+report.[0-9]*.[0-9]*.[0-9]*.[0-9]*.json
+pids
+*.pid
+*.seed
+*.pid.lock
+lib-cov
+coverage
+*.lcov
+.nyc_output
+.grunt
+bower_components
+.lock-wscript
+build/Release
+node_modules/
+jspm_packages/
+web_modules/
+*.tsbuildinfo
+.npm
+.eslintcache
+.stylelintcache
+.rpt2_cache/
+.rts2_cache_cjs/
+.rts2_cache_es/
+.rts2_cache_umd/
+.node_repl_history
+*.tgz
+.yarn-integrity
+.env
+.env.development.local
+.env.test.local
+.env.production.local
+.env.local
+.cache
+.parcel-cache
+.next
+out
+.nuxt
+dist
+.cache/
+.vuepress/dist
+.temp
+.docusaurus
+.serverless/
+.fusebox/
+.dynamodb/
+.tern-port
+.vscode-test
+.yarn/cache
+.yarn/unplugged
+.yarn/build-state.yml
+.yarn/install-state.gz
+.pnp.*
Index: .idea/.gitignore
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/.gitignore b/.idea/.gitignore
new file mode 100644
--- /dev/null	(revision 6a1928f488ad5374400f30d7447521d3fd4d24cc)
+++ b/.idea/.gitignore	(revision 6a1928f488ad5374400f30d7447521d3fd4d24cc)
@@ -0,0 +1,8 @@
+# Default ignored files
+/shelf/
+/workspace.xml
+# Editor-based HTTP Client requests
+/httpRequests/
+# Datasource local storage ignored files
+/dataSources/
+/dataSources.local.xml
Index: .idea/compiler.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/compiler.xml b/.idea/compiler.xml
new file mode 100644
--- /dev/null	(revision 6a1928f488ad5374400f30d7447521d3fd4d24cc)
+++ b/.idea/compiler.xml	(revision 6a1928f488ad5374400f30d7447521d3fd4d24cc)
@@ -0,0 +1,6 @@
+<?xml version="1.0" encoding="UTF-8"?>
+<project version="4">
+  <component name="TypeScriptCompiler">
+    <option name="recompileOnChanges" value="true" />
+  </component>
+</project>
\ No newline at end of file
Index: .idea/jsLibraryMappings.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/jsLibraryMappings.xml b/.idea/jsLibraryMappings.xml
new file mode 100644
--- /dev/null	(revision 6a1928f488ad5374400f30d7447521d3fd4d24cc)
+++ b/.idea/jsLibraryMappings.xml	(revision 6a1928f488ad5374400f30d7447521d3fd4d24cc)
@@ -0,0 +1,6 @@
+<?xml version="1.0" encoding="UTF-8"?>
+<project version="4">
+  <component name="JavaScriptLibraryMappings">
+    <includedPredefinedLibrary name="Node.js Core" />
+  </component>
+</project>
\ No newline at end of file
Index: .idea/modules.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/modules.xml b/.idea/modules.xml
new file mode 100644
--- /dev/null	(revision 6a1928f488ad5374400f30d7447521d3fd4d24cc)
+++ b/.idea/modules.xml	(revision 6a1928f488ad5374400f30d7447521d3fd4d24cc)
@@ -0,0 +1,8 @@
+<?xml version="1.0" encoding="UTF-8"?>
+<project version="4">
+  <component name="ProjectModuleManager">
+    <modules>
+      <module fileurl="file://$PROJECT_DIR$/.idea/next-blog.iml" filepath="$PROJECT_DIR$/.idea/next-blog.iml" />
+    </modules>
+  </component>
+</project>
\ No newline at end of file
Index: .idea/next-blog.iml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/next-blog.iml b/.idea/next-blog.iml
new file mode 100644
--- /dev/null	(revision 6a1928f488ad5374400f30d7447521d3fd4d24cc)
+++ b/.idea/next-blog.iml	(revision 6a1928f488ad5374400f30d7447521d3fd4d24cc)
@@ -0,0 +1,12 @@
+<?xml version="1.0" encoding="UTF-8"?>
+<module type="WEB_MODULE" version="4">
+  <component name="NewModuleRootManager">
+    <content url="file://$MODULE_DIR$">
+      <excludeFolder url="file://$MODULE_DIR$/.tmp" />
+      <excludeFolder url="file://$MODULE_DIR$/temp" />
+      <excludeFolder url="file://$MODULE_DIR$/tmp" />
+    </content>
+    <orderEntry type="inheritedJdk" />
+    <orderEntry type="sourceFolder" forTests="false" />
+  </component>
+</module>
\ No newline at end of file
Index: .idea/vcs.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/vcs.xml b/.idea/vcs.xml
new file mode 100644
--- /dev/null	(revision 6a1928f488ad5374400f30d7447521d3fd4d24cc)
+++ b/.idea/vcs.xml	(revision 6a1928f488ad5374400f30d7447521d3fd4d24cc)
@@ -0,0 +1,6 @@
+<?xml version="1.0" encoding="UTF-8"?>
+<project version="4">
+  <component name="VcsDirectoryMappings">
+    <mapping directory="" vcs="Git" />
+  </component>
+</project>
\ No newline at end of file
Index: README.md
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/README.md b/README.md
--- a/README.md	(revision 588790f342a72a014dca66c507df1b4340ccd3c7)
+++ b/README.md	(revision 6a1928f488ad5374400f30d7447521d3fd4d24cc)
@@ -1,2 +1,67 @@
-# next-blog
-Add blogging to your nextjs project in a jiffy
+# Next-Blog
+
+**Elevate your Next.js project with seamless blogging functionality.**
+
+Next-Blog is designed to integrate a blogging platform into your Next.js application effortlessly, akin to the simplicity of integrating NextAuth today.
+
+**Currently, Next-Blog is a work in progress and we're excited to invite collaborators to join us in this journey.** Whether you're interested in coding, documentation, design, or testing, we welcome contributions of all kinds to make Next-Blog robust and user-friendly.
+
+![Folder Structure](./images/apps-router-folder-structure.png)
+
+### Quick Start
+
+To add Next-Blog to your project, follow these simple steps:
+
+1. **Install Next-Blog**
+
+   First, ensure you have Next.js set up. Then, install Next-Blog by adding it to your project dependencies.
+
+2. **Update Your Route Configuration**
+
+   In your `route.ts`, integrate Next-Blog as shown:
+
+   ```typescript
+   import nextBlog from "@supergrowthai/next-blog"
+
+   const { GET, POST } = nextBlog();
+
+   export { GET, POST };
+   ```
+
+3. **Configure Rewrites in next.config.js**
+
+   Define a rewrite in your `next.config.js` to specify where your blog posts are routed:
+
+   ```javascript
+   const config = {
+       rewrite() {
+           return [
+               {
+                   source: "/blog/:slug*",
+                   destination: "/api/sgai-blog/:slug*",
+               },
+           ];
+       },
+   };
+   ```
+
+### Roadmap
+
+Here are the next steps on our journey to enhance Next-Blog:
+
+- [x] Project initialization.
+- [ ] Add a simple database adapter (SQLite/JSON file).
+- [ ] Implement internal dashboard pages for managing posts, complete with an editor.
+- [ ] Introduce configuration options for managing pages, tags, and filters.
+- [ ] Create a sample theme to kickstart your blog aesthetics.
+- [ ] And more - we're open to suggestions!
+
+### Get Involved
+
+We're looking for contributors to help develop features, write documentation, design user interfaces, and more. If you're passionate about making content creation accessible and straightforward for Next.js developers, we'd love to hear from you.
+
+**Join us in shaping the future of blogging in Next.js. Together, we can build something amazing.**
+
+---
+
+This version aims to be more engaging, inviting, and clear in its instructions and call for collaboration. Feel free to adjust the language to better match the tone and style of your project or community!
Index: package.json
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/package.json b/package.json
new file mode 100644
--- /dev/null	(revision 6a1928f488ad5374400f30d7447521d3fd4d24cc)
+++ b/package.json	(revision 6a1928f488ad5374400f30d7447521d3fd4d24cc)
@@ -0,0 +1,16 @@
+{
+  "name": "@supergrowthai/next-blog",
+  "version": "1.0.0",
+  "description": "Add blogging to your nextjs project in a jiffy",
+  "main": "src/index.tsx",
+  "scripts": {
+    "test": "echo \"Error: no test specified\" && exit 1"
+  },
+  "author": "",
+  "license": "ISC",
+  "dependencies": {
+    "next": "^14.1.4",
+    "react": "^18.2.0",
+    "react-dom": "^18.2.0"
+  }
+}
Index: src/database.ts
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/database.ts b/src/database.ts
new file mode 100644
--- /dev/null	(revision 6a1928f488ad5374400f30d7447521d3fd4d24cc)
+++ b/src/database.ts	(revision 6a1928f488ad5374400f30d7447521d3fd4d24cc)
@@ -0,0 +1,83 @@
+export interface DatabaseProvider {
+    blogs: {
+        findOne(filter: Object): Promise<Blog>;
+        find(filter: Object): Promise<Blog[]>;
+        findById(id: string): Promise<Blog>;
+        create(data: BlogData): Promise<Blog>;
+        updateOne(filter: Object, update: Object): Promise<void>;
+        deleteOne(filter: Object): Promise<void>;
+    };
+    categories: {
+        findById(id: string): Promise<Category>;
+        create(data: CategoryData): Promise<Category>;
+        updateOne(filter: Object, update: Object): Promise<void>;
+        deleteOne(filter: Object): Promise<void>;
+    };
+    tags: {
+        findById(id: string): Promise<Tag>;
+        create(data: TagData): Promise<Tag>;
+        updateOne(filter: Object, update: Object): Promise<void>;
+        deleteOne(filter: Object): Promise<void>;
+    };
+    authors: {
+        findById(id: string): Promise<Author>;
+        create(data: AuthorData): Promise<Author>;
+        updateOne(filter: Object, update: Object): Promise<void>;
+        deleteOne(filter: Object): Promise<void>;
+    };
+}
+
+export interface Blog {
+    _id: string;
+    title: string;
+    slug: string;
+    content: string;
+    category: string;
+    tags: string[];
+    author: string;
+    createdAt: Date;
+    updatedAt: Date;
+}
+
+export interface BlogData {
+    title: string;
+    slug: string;
+    content: string;
+    category: string;
+    tags: string[];
+    author: string;
+}
+
+export interface Category {
+    _id: string;
+    name: string;
+    description: string;
+}
+
+export interface CategoryData {
+    name: string;
+    description: string;
+}
+
+export interface Tag {
+    _id: string;
+    name: string;
+}
+
+export interface TagData {
+    name: string;
+}
+
+export interface Author {
+    _id: string;
+    name: string;
+    email: string;
+    bio: string;
+}
+
+export interface AuthorData {
+    name: string;
+    email: string;
+    bio: string;
+}
+
Index: src/index.tsx
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/index.tsx b/src/index.tsx
new file mode 100644
--- /dev/null	(revision 6a1928f488ad5374400f30d7447521d3fd4d24cc)
+++ b/src/index.tsx	(revision 6a1928f488ad5374400f30d7447521d3fd4d24cc)
@@ -0,0 +1,119 @@
+import React from "react";
+import {Blog, Category, DatabaseProvider, Tag} from "./database";
+import {NextRequest, NextResponse} from "next/server";
+import {getParamFromUrl, matchPathToFunction, PathObject} from "./utils/parse-path";
+
+const ShowBlog = ({blog}: { blog: Blog }) => <div>Show Blog: {blog?.title}</div>;
+const ShowCategory = ({category, blogs}: { category: Category, blogs: Blog[] }) => <div>Show
+    Category: {category.name}</div>;
+const ShowTag = ({tag, blogs}: { tag: Tag, blogs: Blog[] }) => <div>Show Tag: {tag.name}</div>;
+const ShowDashboard = () => <div>Dashboard</div>;
+const ManageBlogs = () => <div>Manage Blogs</div>;
+const ManageCategories = () => <div>Manage Categories</div>;
+const ManageTags = () => <div>Manage Tags</div>;
+const NotFound = () => <div>404 - Not Found</div>;
+
+export * from "./database"
+
+export default function nextBlog({db}: { db: DatabaseProvider }) {
+    const cmsPaths: PathObject = {
+        'api': {
+            'sgai-blog': {
+                'blog': {
+                    ':slug': {
+                        '': async (params: { slug: string }) => {
+                            const slug = params["slug"];
+                            const blog = await db.blogs.findOne({slug});
+                            return <ShowBlog blog={blog}/>;
+                        }
+                    }
+                },
+                'categories': {
+                    ':category': {
+                        '': async (params: { category: string }) => {
+                            const categorySlug = params['category'];
+                            const category = await db.categories.findById(categorySlug)
+                            const blogs = await db.blogs.find({category});
+                            return <ShowCategory category={category} blogs={blogs}/>;
+                        }
+                    }
+                },
+                'tags': {
+                    ':tag': {
+                        '': async (params: { tag: string }) => {
+                            const tagSlug = params['tag'];
+                            const tag = await db.tags.findById(tagSlug)
+                            const blogs = await db.blogs.find({tags: tag});
+                            return <ShowTag tag={tag} blogs={blogs}/>;
+                        }
+                    }
+                },
+                'dashboard': {
+                    '': () => <ShowDashboard/>,
+                    'blogs': {
+                        '': () => <ManageBlogs/>,
+                        'create': async () => {
+                            // Handle blog creation
+                        },
+                        ':id': {
+                            '': async () => {
+                                return <NotFound/>
+                            },
+                            'delete': async () => {
+                                return <NotFound/>
+                            }
+                        }
+                    },
+                    'categories': {
+                        '': () => <ManageCategories/>,
+                        'create': async () => {
+                            return <NotFound/>
+                        },
+                        ':id': {
+                            '': async () => {
+                                return <NotFound/>
+                            },
+                            'delete': async () => {
+                                return <NotFound/>
+                            }
+                        }
+                    },
+                    'tags': {
+                        '': () => <ManageTags/>,
+                        'create': async () => {
+                            return <NotFound/>
+                        },
+                        ':id': {
+                            '': async () => {
+                                return <NotFound/>
+                            },
+                            'delete': async () => {
+                                return <NotFound/>
+                            }
+                        }
+                    }
+                }
+            }
+        }
+    };
+
+    async function GET(request: NextRequest, response: NextResponse) {
+        const ReactDOMServer = (await import('react-dom/server')).default;
+
+        const {
+            params,
+            handler,
+            templatePath
+        } = matchPathToFunction(cmsPaths, request.nextUrl.pathname)
+
+        return new NextResponse(ReactDOMServer.renderToString(await handler?.(params) ||
+            <NotFound/>), {headers: {"Content-Type": "text/html"}});
+    }
+
+    function POST(request: NextRequest, response: NextResponse) {
+        return NextResponse.json({okay: 1})
+    }
+
+    return {GET, POST}
+}
+
Index: src/utils/parse-path.ts
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/utils/parse-path.ts b/src/utils/parse-path.ts
new file mode 100644
--- /dev/null	(revision 6a1928f488ad5374400f30d7447521d3fd4d24cc)
+++ b/src/utils/parse-path.ts	(revision 6a1928f488ad5374400f30d7447521d3fd4d24cc)
@@ -0,0 +1,76 @@
+export function getParamFromUrl(url: string, template: string, param: string): {
+    params: Record<string, string>,
+    templatePath: string
+} | null {
+    const urlSegments = new URL(url).pathname.split('/').filter(Boolean);
+    const templateSegments = template.split('/').filter(Boolean);
+
+    if (urlSegments.length !== templateSegments.length) {
+        return null;
+    }
+
+    const params = templateSegments.reduce((acc, cur, index) => {
+        if (cur.startsWith(':')) {
+            acc[cur.slice(1)] = urlSegments[index];
+        }
+        return acc;
+    }, {} as Record<string, string>);
+
+    const templatePath = templateSegments.join('/');
+
+    return params[param] ? {params, templatePath} : null;
+}
+
+export interface PathMatchResult {
+    handler: Function | null;
+    templatePath: string;
+    params: Record<string, string>;
+}
+
+export function matchPathToFunction(pathObject: PathObject, url: string): PathMatchResult {
+    const segments = url.split('/').filter(Boolean); // Split and remove empty segments
+
+    function isPathObject(obj: PathObject | Function): obj is PathObject {
+        return typeof obj === 'object' && !(obj instanceof Function);
+    }
+
+    function traverse(obj: PathObject | Function, index: number, pathAccumulator: string[]): PathMatchResult {
+
+        if (index >= segments.length) {
+            if (typeof obj === 'function') {
+                return {handler: obj, templatePath: pathAccumulator.join('/'), params: {}};
+            } else if (isPathObject(obj) && typeof obj[""] === 'function') {
+                return {handler: obj[""] as Function, templatePath: pathAccumulator.join('/'), params: {}};
+            }
+            return {templatePath: pathAccumulator.join('/'), handler: null, params: {}};
+        }
+
+        if (!isPathObject(obj)) {
+            return {templatePath: pathAccumulator.join('/'), handler: null, params: {}};
+        }
+
+        const segment = segments[index];
+        if (obj.hasOwnProperty(segment)) {
+            return traverse(obj[segment], index + 1, [...pathAccumulator, segment]);
+        } else {
+            for (const key in obj) {
+                if (key.startsWith(":")) {
+                    const result = traverse(obj[key], index + 1, [...pathAccumulator, key]);
+                    if (result.handler) {
+                        const params = {...result.params, [key.substring(1)]: segment}; // Placeholder for actual parameter extraction logic
+                        return {...result, params};
+                    }
+                }
+            }
+            if (obj.hasOwnProperty("")) {
+                return traverse(obj[""], index + 1, [...pathAccumulator, ""]);
+            }
+        }
+
+        return {templatePath: pathAccumulator.join('/'), handler: null, params: {}};
+    }
+
+    return traverse(pathObject, 0, []);
+}
+
+export type PathObject = { [key: string]: PathObject | Function };
Index: tsconfig.json
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/tsconfig.json b/tsconfig.json
new file mode 100644
--- /dev/null	(revision 6a1928f488ad5374400f30d7447521d3fd4d24cc)
+++ b/tsconfig.json	(revision 6a1928f488ad5374400f30d7447521d3fd4d24cc)
@@ -0,0 +1,12 @@
+{
+  "compilerOptions": {
+    "target": "es2016",
+    "module": "commonjs",
+    "esModuleInterop": true,
+    "forceConsistentCasingInFileNames": true,
+    "strict": true,
+    "skipLibCheck": true,
+    "jsx": "react",
+    "noEmit": true
+  }
+}
Index: yarn.lock
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/yarn.lock b/yarn.lock
new file mode 100644
--- /dev/null	(revision 6a1928f488ad5374400f30d7447521d3fd4d24cc)
+++ b/yarn.lock	(revision 6a1928f488ad5374400f30d7447521d3fd4d24cc)
@@ -0,0 +1,180 @@
+# THIS IS AN AUTOGENERATED FILE. DO NOT EDIT THIS FILE DIRECTLY.
+# yarn lockfile v1
+
+
+"@next/env@14.1.4":
+  version "14.1.4"
+  resolved "https://registry.yarnpkg.com/@next/env/-/env-14.1.4.tgz#432e80651733fbd67230bf262aee28be65252674"
+  integrity sha512-e7X7bbn3Z6DWnDi75UWn+REgAbLEqxI8Tq2pkFOFAMpWAWApz/YCUhtWMWn410h8Q2fYiYL7Yg5OlxMOCfFjJQ==
+
+"@next/swc-darwin-arm64@14.1.4":
+  version "14.1.4"
+  resolved "https://registry.yarnpkg.com/@next/swc-darwin-arm64/-/swc-darwin-arm64-14.1.4.tgz#a3bca0dc4393ac4cf3169bbf24df63441de66bb7"
+  integrity sha512-ubmUkbmW65nIAOmoxT1IROZdmmJMmdYvXIe8211send9ZYJu+SqxSnJM4TrPj9wmL6g9Atvj0S/2cFmMSS99jg==
+
+"@next/swc-darwin-x64@14.1.4":
+  version "14.1.4"
+  resolved "https://registry.yarnpkg.com/@next/swc-darwin-x64/-/swc-darwin-x64-14.1.4.tgz#ba3683d4e2d30099f3f2864dd7349a4d9f440140"
+  integrity sha512-b0Xo1ELj3u7IkZWAKcJPJEhBop117U78l70nfoQGo4xUSvv0PJSTaV4U9xQBLvZlnjsYkc8RwQN1HoH/oQmLlQ==
+
+"@next/swc-linux-arm64-gnu@14.1.4":
+  version "14.1.4"
+  resolved "https://registry.yarnpkg.com/@next/swc-linux-arm64-gnu/-/swc-linux-arm64-gnu-14.1.4.tgz#3519969293f16379954b7e196deb0c1eecbb2f8b"
+  integrity sha512-457G0hcLrdYA/u1O2XkRMsDKId5VKe3uKPvrKVOyuARa6nXrdhJOOYU9hkKKyQTMru1B8qEP78IAhf/1XnVqKA==
+
+"@next/swc-linux-arm64-musl@14.1.4":
+  version "14.1.4"
+  resolved "https://registry.yarnpkg.com/@next/swc-linux-arm64-musl/-/swc-linux-arm64-musl-14.1.4.tgz#4bb3196bd402b3f84cf5373ff1021f547264d62f"
+  integrity sha512-l/kMG+z6MB+fKA9KdtyprkTQ1ihlJcBh66cf0HvqGP+rXBbOXX0dpJatjZbHeunvEHoBBS69GYQG5ry78JMy3g==
+
+"@next/swc-linux-x64-gnu@14.1.4":
+  version "14.1.4"
+  resolved "https://registry.yarnpkg.com/@next/swc-linux-x64-gnu/-/swc-linux-x64-gnu-14.1.4.tgz#1b3372c98c83dcdab946cdb4ee06e068b8139ba3"
+  integrity sha512-BapIFZ3ZRnvQ1uWbmqEGJuPT9cgLwvKtxhK/L2t4QYO7l+/DxXuIGjvp1x8rvfa/x1FFSsipERZK70pewbtJtw==
+
+"@next/swc-linux-x64-musl@14.1.4":
+  version "14.1.4"
+  resolved "https://registry.yarnpkg.com/@next/swc-linux-x64-musl/-/swc-linux-x64-musl-14.1.4.tgz#8459088bdc872648ff78f121db596f2533df5808"
+  integrity sha512-mqVxTwk4XuBl49qn2A5UmzFImoL1iLm0KQQwtdRJRKl21ylQwwGCxJtIYo2rbfkZHoSKlh/YgztY0qH3wG1xIg==
+
+"@next/swc-win32-arm64-msvc@14.1.4":
+  version "14.1.4"
+  resolved "https://registry.yarnpkg.com/@next/swc-win32-arm64-msvc/-/swc-win32-arm64-msvc-14.1.4.tgz#84280a08c00cc3be24ddd3a12f4617b108e6dea6"
+  integrity sha512-xzxF4ErcumXjO2Pvg/wVGrtr9QQJLk3IyQX1ddAC/fi6/5jZCZ9xpuL9Tzc4KPWMFq8GGWFVDMshZOdHGdkvag==
+
+"@next/swc-win32-ia32-msvc@14.1.4":
+  version "14.1.4"
+  resolved "https://registry.yarnpkg.com/@next/swc-win32-ia32-msvc/-/swc-win32-ia32-msvc-14.1.4.tgz#23ff7f4bd0a27177428669ef6fa5c3923c738031"
+  integrity sha512-WZiz8OdbkpRw6/IU/lredZWKKZopUMhcI2F+XiMAcPja0uZYdMTZQRoQ0WZcvinn9xZAidimE7tN9W5v9Yyfyw==
+
+"@next/swc-win32-x64-msvc@14.1.4":
+  version "14.1.4"
+  resolved "https://registry.yarnpkg.com/@next/swc-win32-x64-msvc/-/swc-win32-x64-msvc-14.1.4.tgz#bccf5beccfde66d6c66fa4e2509118c796385eda"
+  integrity sha512-4Rto21sPfw555sZ/XNLqfxDUNeLhNYGO2dlPqsnuCg8N8a2a9u1ltqBOPQ4vj1Gf7eJC0W2hHG2eYUHuiXgY2w==
+
+"@swc/helpers@0.5.2":
+  version "0.5.2"
+  resolved "https://registry.yarnpkg.com/@swc/helpers/-/helpers-0.5.2.tgz#85ea0c76450b61ad7d10a37050289eded783c27d"
+  integrity sha512-E4KcWTpoLHqwPHLxidpOqQbcrZVgi0rsmmZXUle1jXmJfuIf/UWpczUJ7MZZ5tlxytgJXyp0w4PGkkeLiuIdZw==
+  dependencies:
+    tslib "^2.4.0"
+
+busboy@1.6.0:
+  version "1.6.0"
+  resolved "https://registry.yarnpkg.com/busboy/-/busboy-1.6.0.tgz#966ea36a9502e43cdb9146962523b92f531f6893"
+  integrity sha512-8SFQbg/0hQ9xy3UNTB0YEnsNBbWfhf7RtnzpL7TkBiTBRfrQ9Fxcnz7VJsleJpyp6rVLvXiuORqjlHi5q+PYuA==
+  dependencies:
+    streamsearch "^1.1.0"
+
+caniuse-lite@^1.0.30001579:
+  version "1.0.30001600"
+  resolved "https://registry.yarnpkg.com/caniuse-lite/-/caniuse-lite-1.0.30001600.tgz#93a3ee17a35aa6a9f0c6ef1b2ab49507d1ab9079"
+  integrity sha512-+2S9/2JFhYmYaDpZvo0lKkfvuKIglrx68MwOBqMGHhQsNkLjB5xtc/TGoEPs+MxjSyN/72qer2g97nzR641mOQ==
+
+client-only@0.0.1:
+  version "0.0.1"
+  resolved "https://registry.yarnpkg.com/client-only/-/client-only-0.0.1.tgz#38bba5d403c41ab150bff64a95c85013cf73bca1"
+  integrity sha512-IV3Ou0jSMzZrd3pZ48nLkT9DA7Ag1pnPzaiQhpW7c3RbcqqzvzzVu+L8gfqMp/8IM2MQtSiqaCxrrcfu8I8rMA==
+
+graceful-fs@^4.2.11:
+  version "4.2.11"
+  resolved "https://registry.yarnpkg.com/graceful-fs/-/graceful-fs-4.2.11.tgz#4183e4e8bf08bb6e05bbb2f7d2e0c8f712ca40e3"
+  integrity sha512-RbJ5/jmFcNNCcDV5o9eTnBLJ/HszWV0P73bc+Ff4nS/rJj+YaS6IGyiOL0VoBYX+l1Wrl3k63h/KrH+nhJ0XvQ==
+
+"js-tokens@^3.0.0 || ^4.0.0":
+  version "4.0.0"
+  resolved "https://registry.yarnpkg.com/js-tokens/-/js-tokens-4.0.0.tgz#19203fb59991df98e3a287050d4647cdeaf32499"
+  integrity sha512-RdJUflcE3cUzKiMqQgsCu06FPu9UdIJO0beYbPhHN4k6apgJtifcoCtT9bcxOpYBtpD2kCM6Sbzg4CausW/PKQ==
+
+loose-envify@^1.1.0:
+  version "1.4.0"
+  resolved "https://registry.yarnpkg.com/loose-envify/-/loose-envify-1.4.0.tgz#71ee51fa7be4caec1a63839f7e682d8132d30caf"
+  integrity sha512-lyuxPGr/Wfhrlem2CL/UcnUc1zcqKAImBDzukY7Y5F/yQiNdko6+fRLevlw1HgMySw7f611UIY408EtxRSoK3Q==
+  dependencies:
+    js-tokens "^3.0.0 || ^4.0.0"
+
+nanoid@^3.3.6:
+  version "3.3.7"
+  resolved "https://registry.yarnpkg.com/nanoid/-/nanoid-3.3.7.tgz#d0c301a691bc8d54efa0a2226ccf3fe2fd656bd8"
+  integrity sha512-eSRppjcPIatRIMC1U6UngP8XFcz8MQWGQdt1MTBQ7NaAmvXDfvNxbvWV3x2y6CdEUciCSsDHDQZbhYaB8QEo2g==
+
+next@^14.1.4:
+  version "14.1.4"
+  resolved "https://registry.yarnpkg.com/next/-/next-14.1.4.tgz#203310f7310578563fd5c961f0db4729ce7a502d"
+  integrity sha512-1WTaXeSrUwlz/XcnhGTY7+8eiaFvdet5z9u3V2jb+Ek1vFo0VhHKSAIJvDWfQpttWjnyw14kBeq28TPq7bTeEQ==
+  dependencies:
+    "@next/env" "14.1.4"
+    "@swc/helpers" "0.5.2"
+    busboy "1.6.0"
+    caniuse-lite "^1.0.30001579"
+    graceful-fs "^4.2.11"
+    postcss "8.4.31"
+    styled-jsx "5.1.1"
+  optionalDependencies:
+    "@next/swc-darwin-arm64" "14.1.4"
+    "@next/swc-darwin-x64" "14.1.4"
+    "@next/swc-linux-arm64-gnu" "14.1.4"
+    "@next/swc-linux-arm64-musl" "14.1.4"
+    "@next/swc-linux-x64-gnu" "14.1.4"
+    "@next/swc-linux-x64-musl" "14.1.4"
+    "@next/swc-win32-arm64-msvc" "14.1.4"
+    "@next/swc-win32-ia32-msvc" "14.1.4"
+    "@next/swc-win32-x64-msvc" "14.1.4"
+
+picocolors@^1.0.0:
+  version "1.0.0"
+  resolved "https://registry.yarnpkg.com/picocolors/-/picocolors-1.0.0.tgz#cb5bdc74ff3f51892236eaf79d68bc44564ab81c"
+  integrity sha512-1fygroTLlHu66zi26VoTDv8yRgm0Fccecssto+MhsZ0D/DGW2sm8E8AjW7NU5VVTRt5GxbeZ5qBuJr+HyLYkjQ==
+
+postcss@8.4.31:
+  version "8.4.31"
+  resolved "https://registry.yarnpkg.com/postcss/-/postcss-8.4.31.tgz#92b451050a9f914da6755af352bdc0192508656d"
+  integrity sha512-PS08Iboia9mts/2ygV3eLpY5ghnUcfLV/EXTOW1E2qYxJKGGBUtNjN76FYHnMs36RmARn41bC0AZmn+rR0OVpQ==
+  dependencies:
+    nanoid "^3.3.6"
+    picocolors "^1.0.0"
+    source-map-js "^1.0.2"
+
+react-dom@^18.2.0:
+  version "18.2.0"
+  resolved "https://registry.yarnpkg.com/react-dom/-/react-dom-18.2.0.tgz#22aaf38708db2674ed9ada224ca4aa708d821e3d"
+  integrity sha512-6IMTriUmvsjHUjNtEDudZfuDQUoWXVxKHhlEGSk81n4YFS+r/Kl99wXiwlVXtPBtJenozv2P+hxDsw9eA7Xo6g==
+  dependencies:
+    loose-envify "^1.1.0"
+    scheduler "^0.23.0"
+
+react@^18.2.0:
+  version "18.2.0"
+  resolved "https://registry.yarnpkg.com/react/-/react-18.2.0.tgz#555bd98592883255fa00de14f1151a917b5d77d5"
+  integrity sha512-/3IjMdb2L9QbBdWiW5e3P2/npwMBaU9mHCSCUzNln0ZCYbcfTsGbTJrU/kGemdH2IWmB2ioZ+zkxtmq6g09fGQ==
+  dependencies:
+    loose-envify "^1.1.0"
+
+scheduler@^0.23.0:
+  version "0.23.0"
+  resolved "https://registry.yarnpkg.com/scheduler/-/scheduler-0.23.0.tgz#ba8041afc3d30eb206a487b6b384002e4e61fdfe"
+  integrity sha512-CtuThmgHNg7zIZWAXi3AsyIzA3n4xx7aNyjwC2VJldO2LMVDhFK+63xGqq6CsJH4rTAt6/M+N4GhZiDYPx9eUw==
+  dependencies:
+    loose-envify "^1.1.0"
+
+source-map-js@^1.0.2:
+  version "1.2.0"
+  resolved "https://registry.yarnpkg.com/source-map-js/-/source-map-js-1.2.0.tgz#16b809c162517b5b8c3e7dcd315a2a5c2612b2af"
+  integrity sha512-itJW8lvSA0TXEphiRoawsCksnlf8SyvmFzIhltqAHluXd88pkCd+cXJVHTDwdCr0IzwptSm035IHQktUu1QUMg==
+
+streamsearch@^1.1.0:
+  version "1.1.0"
+  resolved "https://registry.yarnpkg.com/streamsearch/-/streamsearch-1.1.0.tgz#404dd1e2247ca94af554e841a8ef0eaa238da764"
+  integrity sha512-Mcc5wHehp9aXz1ax6bZUyY5afg9u2rv5cqQI3mRrYkGC8rW2hM02jWuwjtL++LS5qinSyhj2QfLyNsuc+VsExg==
+
+styled-jsx@5.1.1:
+  version "5.1.1"
+  resolved "https://registry.yarnpkg.com/styled-jsx/-/styled-jsx-5.1.1.tgz#839a1c3aaacc4e735fed0781b8619ea5d0009d1f"
+  integrity sha512-pW7uC1l4mBZ8ugbiZrcIsiIvVx1UmTfw7UkC3Um2tmfUq9Bhk8IiyEIPl6F8agHgjzku6j0xQEZbfA5uSgSaCw==
+  dependencies:
+    client-only "0.0.1"
+
+tslib@^2.4.0:
+  version "2.6.2"
+  resolved "https://registry.yarnpkg.com/tslib/-/tslib-2.6.2.tgz#703ac29425e7b37cd6fd456e92404d46d1f3e4ae"
+  integrity sha512-AEYxH93jGFPn/a2iVAwW87VuUIkR1FVUKB77NwMF7nBTDkDrrT/Hpt/IrCJ0QXhW27jTBDcf5ZY7w6RiqTMw2Q==
diff --git a/images/apps-router-folder-structure.png b/images/apps-router-folder-structure.png
new file mode 100644
index 0000000000000000000000000000000000000000..2cd3d6c05647b14d2914efa7c4b768fae360e7a8
GIT binary patch
literal 21596
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

